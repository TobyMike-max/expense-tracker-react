{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","title","AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.645f72df.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <h2>\r\n      {title}\r\n    </h2>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;\r\n","export const AppReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      return  {\r\n      ...state,\r\n      transactions: state.transactions\r\n      .filter(transaction => transaction.id !== action.payload)\r\n    };\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n          ...state,\r\n          transactions: [action.payload, ...state.transactions]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { createContext, useReducer} from 'react';\r\nimport { AppReducer } from './AppReducer';\r\n\r\n\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: [\r\n    {id: 1, text: 'Salary', amount: 300},\r\n    {id: 2, text: 'Book', amount: -10},\r\n  ]\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider components\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n// Delete actions\r\nfunction deleteTransaction(id) {\r\n  dispatch({\r\n    type: 'DELETE_TRANSACTION',\r\n    payload: id\r\n  });\r\n}\r\n\r\n// Add actions\r\nfunction addTransaction(transaction) {\r\n  dispatch({\r\n    type: 'ADD_TRANSACTION',\r\n    payload: transaction\r\n  });\r\n}\r\n\r\n    return (\r\n      <GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n      }}>\r\n        {children}\r\n      </GlobalContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Balance = () => {\r\n  const { transactions }= useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4> Your balance </h4>\r\n      <h1>${total}</h1>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Balance;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts\r\n    .filter(item => item < 0)\r\n    .reduce((acc, item) => (acc += item), 0) * -1\r\n  ) .toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4> Income </h4>\r\n        <p className=\"money plus\"> ${income} </p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense </h4>\r\n        <p className=\"money minus\"> ${expense}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n  return (\r\n    <>\r\n    <li className={sign === '-' ? 'minus' : 'plus'}>\r\n      { transaction.text }\r\n      <span>{sign}${Math.abs(transaction.amount)}</span>\r\n      <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n    </li>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Transaction } from './Transaction';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\n\r\nconst TransactionList = () => {\r\n  const { transactions }= useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3> History </h3>\r\n      <ul className=\"list\">\r\n      {transactions.map( transaction =>\r\n        (<Transaction key={transaction.id} transaction={transaction}/>))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default TransactionList;\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\nconst { addTransaction } = useContext(GlobalContext);\r\n\r\nconst onSubmit = e => {\r\n  e.preventDefault();\r\n\r\n  const newTransaction = {\r\n    id: Math.floor(Math.random() * 100000000),\r\n    text,\r\n    amount: +amount\r\n  }\r\n// Add plus sign to a string to convert it to a number\r\n  addTransaction(newTransaction);\r\n}\r\n  return (\r\n    <>\r\n      <h3>Add New Transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\"> Text </label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"> Amount <br />\r\n          (negative - expense, positive - income) </label>\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\"> Add Transaction </button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddTransaction;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Balance from './components/Balance';\r\nimport IncomeExpenses from './components/IncomeExpenses';\r\nimport TransactionList from './components/TransactionList';\r\nimport AddTransaction from './components/AddTransaction';\r\n\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nconst App = () => {\r\n  return (\r\n    <GlobalProvider>\r\n      <Header title='Expense Tracker' />\r\n      <div className=\"container\">\r\n        <Balance />\r\n        <IncomeExpenses />\r\n        <TransactionList />\r\n        <AddTransaction />\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// htmlFor\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}